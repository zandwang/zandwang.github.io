<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="zand.wang/feed.xml" rel="self" type="application/atom+xml" /><link href="zand.wang/" rel="alternate" type="text/html" /><updated>2021-03-03T23:23:15+08:00</updated><id>zand.wang/feed.xml</id><title type="html">zand’s blog</title><subtitle>zand</subtitle><entry><title type="html">TCP和UDP的一些区别</title><link href="zand.wang/network/2021/03/03/what_is_SOCK_STREAM_and_SOCK_DGRAM.html" rel="alternate" type="text/html" title="TCP和UDP的一些区别" /><published>2021-03-03T03:35:49+08:00</published><updated>2021-03-03T03:35:49+08:00</updated><id>zand.wang/network/2021/03/03/what_is_SOCK_STREAM_and_SOCK_DGRAM</id><content type="html" xml:base="zand.wang/network/2021/03/03/what_is_SOCK_STREAM_and_SOCK_DGRAM.html">&lt;p&gt;TCP 一般使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOCK_STREAM&lt;/code&gt;，UDP一般使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOCK_DGRAM&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;TCP是一种面向连接的协议，连接会一直保持，双方会一直通话直到一方终止连接或者网络错误。&lt;/p&gt;

&lt;p&gt;UDP是面向数据包的协议，你发送一个包得到一个恢复然后连接终止。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果你发送多个包，TCP承诺按顺序投递它们。UDP不会，所以接收者如果介意顺序的话需要自己检查&lt;/li&gt;
  &lt;li&gt;如果TCP包丢失，发送者会告知，但UDP不会&lt;/li&gt;
  &lt;li&gt;UDP的数据包有大小限制，可能是512bytes。TCP可以发送更大的包&lt;/li&gt;
  &lt;li&gt;TCP鲁棒性更好，有更多检查，UDP较少&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="network" /><summary type="html">TCP 一般使用SOCK_STREAM，UDP一般使用SOCK_DGRAM</summary></entry><entry><title type="html">go slice 的一些坑</title><link href="zand.wang/go/2021/02/17/go_slice.html" rel="alternate" type="text/html" title="go slice 的一些坑" /><published>2021-02-17T03:35:49+08:00</published><updated>2021-02-17T03:35:49+08:00</updated><id>zand.wang/go/2021/02/17/go_slice</id><content type="html" xml:base="zand.wang/go/2021/02/17/go_slice.html">&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;）&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12341234&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;//函数外的slice确实有被修改&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;//函数外的不变&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;）&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;//这样才能修改函数外的slice&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="go" /><summary type="html">1）func test(h []int) { h[1] = 12341234 //函数外的slice确实有被修改 h = append(h, 1200) //函数外的不变 } 2）func test(h *[]int) { //这样才能修改函数外的slice *h = append(*h, 1200) }</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="zand.wang/jekyll/update/2021/02/15/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-02-15T03:35:49+08:00</published><updated>2021-02-15T03:35:49+08:00</updated><id>zand.wang/jekyll/update/2021/02/15/welcome-to-jekyll</id><content type="html" xml:base="zand.wang/jekyll/update/2021/02/15/welcome-to-jekyll.html">&lt;p&gt;折腾两天才搞起来这个blog，还是比较费劲的，大体参考了这几篇文章
&lt;a href=&quot;https://github.com/uolcano/blog/issues/11&quot;&gt;利用GitHub Pages建立项目或个人网站&lt;/a&gt;
&lt;a href=&quot;https://jacky-wangjj.github.io/2019/04/GitHub+Jekyll%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E8%A7%A3/&quot;&gt;GitHub+Jekyll搭建个人博客详解&lt;/a&gt;
其中遇到的一个问题是mac本身自带了ruby，然而和python一样，各种不让动，brew又装了一个，path加了下才起来
然后直接用别人的模版，结果发布总是失败，github这一点太操蛋了，不提示什么原因，本地都是能起来的，没办法只能做成最简单的版本了
jekyll和hexo等对图片的支持都不好，尤其是要权衡本地preview md和github发布的版本，最终参考了如下的文章
&lt;a href=&quot;http://www.94geek.com/blog/2017/blog-image/&quot;&gt;jekyll图片管理插件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;买了个便宜的域名，参考了&lt;a href=&quot;https://sketchk.xyz/2017/03/24/A-Guide-Of-Making-Your-Personal-Blog-Part-3/&quot;&gt;A Guide Of Making Your Personal Blog 系列&lt;/a&gt;
有些重要的地方记录下来
&lt;img src=&quot;2021-02-15-welcome-to-jekyll/image/2021-02-15-18-31-28.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">折腾两天才搞起来这个blog，还是比较费劲的，大体参考了这几篇文章 利用GitHub Pages建立项目或个人网站 GitHub+Jekyll搭建个人博客详解 其中遇到的一个问题是mac本身自带了ruby，然而和python一样，各种不让动，brew又装了一个，path加了下才起来 然后直接用别人的模版，结果发布总是失败，github这一点太操蛋了，不提示什么原因，本地都是能起来的，没办法只能做成最简单的版本了 jekyll和hexo等对图片的支持都不好，尤其是要权衡本地preview md和github发布的版本，最终参考了如下的文章 jekyll图片管理插件</summary></entry></feed>